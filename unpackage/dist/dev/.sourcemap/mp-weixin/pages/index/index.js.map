{"version":3,"file":"index.js","sources":["pages/index/index.vue","D:/浏览器下载/HBuilderX.4.66.2025051912/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 遍历所有任务分类 -->\n    <view v-for=\"category in taskCategories\" :key=\"category.id\" class=\"category-wrapper\">\n      <view class=\"category-card\" @click=\"toggleCategory(category.id)\">\n        <text class=\"category-title\">{{ category.name }}</text>\n        <view class=\"arrow\" :class=\"{ 'is-open': activeCategoryId === category.id }\"></view>\n      </view>\n      \n      <!-- 任务列表 -->\n      <view v-if=\"activeCategoryId === category.id\" class=\"task-list-container\">\n        <view v-if=\"category.loading\" class=\"task-card empty\">\n          加载中...\n        </view>\n        <view v-else-if=\"!category.tasks || !category.tasks.length\" class=\"task-card empty\">\n          暂无任务\n        </view>\n        <view \n          v-else \n          v-for=\"(task, index) in category.tasks\" \n          :key=\"task.id\" \n          class=\"task-card\" \n          @click=\"goToDetail(task, category.value)\"\n          @longpress=\"showDeleteConfirm(task, index)\"\n        >\n          <text class=\"task-title\">{{ task.name }}</text>\n        </view>\n        \n        <!-- 添加任务输入框 -->\n        <view class=\"add-task-input\" v-if=\"showAddTask\">\n          <input \n            class=\"input-field\" \n            v-model=\"newTaskName\" \n            placeholder=\"输入任务名称\" \n            placeholder-class=\"placeholder\"\n            focus\n            @input=\"handleInput\"\n          />\n          <view class=\"confirm-btn\" v-if=\"newTaskName.trim()\" @click=\"addTask\">\n            <text class=\"confirm-icon\">✓</text>\n          </view>\n        </view>\n        \n        <!-- 添加任务按钮 -->\n        <view class=\"add-task-btn\" @click=\"toggleAddTask\">\n          <text class=\"add-icon\">+</text>\n          <text class=\"add-text\">添加任务</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 删除确认弹窗 -->\n    <view class=\"modal\" v-if=\"showDeleteModal\">\n      <view class=\"modal-content\">\n        <view class=\"modal-body\">\n          <text>确定删除任务\"{{ deleteTaskName }}\"吗？</text>\n        </view>\n        <view class=\"modal-footer\">\n          <view class=\"modal-btn cancel\" @click=\"cancelDelete\">取消</view>\n          <view class=\"modal-btn confirm\" @click=\"confirmDelete\">删除</view>\n        </view>\n      </view>\n    </view>\n    \n    <CustomTabBar current=\"index\" />\n  </view>\n</template>\n\n<script>\nimport CustomTabBar from '@/components/tabBar/tabBar.vue'\nimport { request } from '../../components/request'\n\nexport default {\n  components: {\n    CustomTabBar\n  },\n  data() {\n    return {\n      taskCategories: [\n        {\n          id: 2,\n          name: '病害叶片采集',\n          value: 'roast',\n          tasks: [],\n          loading: false,\n          error: null\n        },\n      ],\n      activeCategoryId: null,\n      showAddTask: false,\n      newTaskName: '',\n      taskCounter: 4,\n      showDeleteModal: false,\n      deleteTaskName: '',\n      deleteTaskIndex: -1,\n      deleteTaskId: null,\n      token: uni.getStorageSync('token')\n    }\n  },\n  methods: {\n    async toggleCategory(categoryId) {\n      if (this.activeCategoryId === categoryId) {\n        this.activeCategoryId = null\n        this.showAddTask = false\n        return\n      }\n      this.activeCategoryId = categoryId\n      this.showAddTask = false\n      const category = this.taskCategories.find(c => c.id === categoryId)\n      if (!category) return\n      if (category.tasks.length > 0 || category.loading) return\n      await this.fetchTasks(category)\n    },\n    \n    async fetchTasks(category) {\n      category.loading = true;\n      category.error = null;\n      \n      if (!this.token) {\n        category.error = '未获取到Token，请重新登录';\n        category.loading = false;\n        return;\n      }\n      \n      try {\n        const res = await request({\n          url: '/branchTask/branchTaskList',\n          method: 'GET',\n          headers: {\n            'Authorization': this.token,\n            'Accept': '*/*'\n          },\n          data: {\n            currentPageCount: 1,\n            pageSize: 10000,\n            name: ''\n          }\n        });\n        \n        if (res.code === 200 && res.data && res.data.records) {\n          category.tasks = res.data.records.map(record => ({\n            id: record.id,\n            name: record.name,\n            description: record.name\n          }));\n        } else {\n          throw new Error(res.msg || '获取任务失败');\n        }\n      } catch (error) {\n        console.error('错误:', error);\n        category.error = error.message || '请求失败，请重试';\n      } finally {\n        category.loading = false;\n      }\n    },\n\n    goToDetail(task, typeValue) {\n      uni.navigateTo({\n        url: `/pages/task-detail/task-detail?id=${task.id}&type=${typeValue}&desc=${encodeURIComponent(task.description)}`\n      })\n    },\n    \n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask\n      this.newTaskName = ''\n    },\n    \n    handleInput() {\n      // 输入时触发，用于响应式显示✓\n    },\n    \n    async addTask() {\n      if (!this.newTaskName.trim()) return;\n\n      const category = this.taskCategories.find(c => c.id === this.activeCategoryId);\n      if (!category) return;\n\n      try {\n        category.loading = true;\n        \n        const res = await request({\n          url: '/branchTask/add',\n          method: 'POST',\n          headers: {\n            'Authorization': this.token,\n            'Content-Type': 'application/json',\n            'Accept': '*/*'\n          },\n          data: {\n            name: this.newTaskName.trim()\n          }\n        });\n\n        if (res.code === 200) {\n          await this.fetchTasks(category);\n          this.newTaskName = '';\n          this.showAddTask = false;\n          \n          uni.showToast({\n            title: '添加任务成功',\n            icon: 'success'\n          });\n        } else {\n          throw new Error(res.msg || '添加任务失败');\n        }\n      } catch (error) {\n        console.error('添加任务错误:', error);\n        uni.showToast({\n          title: error.message || '添加任务失败',\n          icon: 'none'\n        });\n      } finally {\n        category.loading = false;\n      }\n    },\n    \n    showDeleteConfirm(task, index) {\n      this.deleteTaskName = task.name\n      this.deleteTaskIndex = index\n      this.deleteTaskId = task.id\n      this.showDeleteModal = true\n    },\n    \n    cancelDelete() {\n      this.showDeleteModal = false\n      this.deleteTaskName = ''\n      this.deleteTaskIndex = -1\n      this.deleteTaskId = null\n    },\n    \n    async confirmDelete() {\n      if (!this.token) {\n        uni.showToast({ title: '请先登录', icon: 'error' });\n        return;\n      }\n\n      try {\n        const res = await request({\n          url: `/branchTask/${this.deleteTaskId}`,\n          method: 'POST',\n          headers: {\n            'Authorization': this.token,\n            'Accept': '*/*',\n            'User-Agent': 'Apifox/1.0.0',\n            'Host': 'larsc.hzau.edu.cn',\n            'Connection': 'keep-alive'\n          }\n        });\n\n        if (res.code === 'A0230') {\n          uni.showToast({ title: '登录已过期', icon: 'error' });\n          uni.navigateTo({ url: '/pages/login/login' });\n          return;\n        }\n\n        // 成功处理逻辑\n        const category = this.taskCategories.find(c => c.id === this.activeCategoryId);\n        if (category) {\n          category.tasks.splice(this.deleteTaskIndex, 1);\n        }\n        uni.showToast({ title: '删除成功', icon: 'success' });\n\n      } catch (error) {\n        console.error('删除失败:', error);\n        uni.showToast({ title: '删除失败', icon: 'error' });\n      } finally {\n        this.showDeleteModal = false;\n        this.deleteTaskName = '';\n        this.deleteTaskIndex = -1;\n        this.deleteTaskId = null;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  padding: 50rpx 30rpx 120rpx;\n}\n.category-wrapper {\n  margin-bottom: 30rpx;\n}\n.category-card {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ghostwhite;\n  border-radius: 16rpx;\n  padding: 40rpx 30rpx;\n  box-shadow: 0 4rpx 10rpx rgba(0, 0, 0, 0.05);\n  position: relative;\n  z-index: 10;\n}\n.category-title {\n  font-size: 48rpx;\n  font-weight: bold;\n}\n.arrow {\n  border: solid #555;\n  border-width: 0 4rpx 4rpx 0;\n  display: inline-block;\n  padding: 8rpx;\n  transform: rotate(45deg);\n  transition: transform 0.3s ease;\n}\n.arrow.is-open {\n  transform: rotate(-135deg);\n}\n.task-list-container {\n  margin-top: -15rpx;\n  padding-top: 25rpx; \n  background-color: #ffffff;\n  border-radius: 0 0 16rpx 16rpx;\n  box-shadow: 0 8rpx 12rpx rgba(0, 0, 0, 0.04);\n  animation: slideDown 0.3s ease-out; \n}\n.task-card {\n  background: #fff;\n  padding: 30rpx;\n  margin: 0 20rpx 20rpx; \n  border-radius: 12rpx;\n  border: 1rpx solid #f0f0f0;\n  text-align: center;\n}\n.task-title {\n  font-size: 30rpx;\n  font-weight: 500;\n  color: #333;\n}\n.task-card.empty {\n  color: #999;\n  border: 1rpx dashed #ddd;\n}\n.add-task-btn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80rpx;\n  margin: 20rpx;\n  background-color: #f0f0f0;\n  border-radius: 40rpx;\n  color: #666;\n}\n.add-icon {\n  font-size: 36rpx;\n  margin-right: 10rpx;\n}\n.add-text {\n  font-size: 28rpx;\n}\n.add-task-input {\n  display: flex;\n  align-items: center;\n  margin: 20rpx;\n  border: 1rpx solid #e0e0e0;\n  border-radius: 40rpx;\n  overflow: hidden;\n}\n.input-field {\n  flex: 1;\n  height: 80rpx;\n  padding: 0 30rpx;\n  font-size: 28rpx;\n}\n.confirm-btn {\n  width: 80rpx;\n  height: 80rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f0f0f0;\n}\n.confirm-icon {\n  font-size: 36rpx;\n  color: #4CAF50;\n}\n.placeholder {\n  color: #ccc;\n}\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.modal-content {\n  width: 80%;\n  background-color: #fff;\n  border-radius: 16rpx;\n  overflow: hidden;\n}\n.modal-body {\n  padding: 40rpx 30rpx;\n  text-align: center;\n  font-size: 32rpx;\n}\n.modal-footer {\n  display: flex;\n  border-top: 1rpx solid #f0f0f0;\n}\n.modal-btn {\n  flex: 1;\n  text-align: center;\n  padding: 30rpx 0;\n  font-size: 32rpx;\n}\n.modal-btn.cancel {\n  border-right: 1rpx solid #f0f0f0;\n  color: #666;\n}\n.modal-btn.confirm {\n  color: #f44336;\n  font-weight: bold;\n}\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.add-task-btn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80rpx;\n  width: 80rpx;\n  margin: 20rpx auto;\n  background-color: #f8f8f8;\n  border-radius: 40rpx;\n  color: #666;\n}\n.add-icon {\n  font-size: 40rpx;\n  margin-right: 0;\n}\n.add-text {\n  display: none;\n}\n.add-task-input {\n  margin: 20rpx;\n  border: 1rpx solid #f0f0f0;\n  border-radius: 12rpx;\n  overflow: hidden;\n}\n.input-field {\n  height: 80rpx;\n  padding: 0 30rpx;\n  font-size: 30rpx;\n  background: #fff;\n}\n.confirm-btn {\n  background-color: #f8f8f8;\n}\n</style>","import MiniProgramPage from 'C:/Users/25855/Desktop/狮山云瞳/狮山云瞳/狮山云瞳/狮山云瞳/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","request"],"mappings":"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"}